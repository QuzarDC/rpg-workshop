{"version":3,"sources":["_components/Column.js","_components/Actions.js","_components/AttackForm.js","_components/Row.js","_components/SelectField.js","_components/StatBlockDisplay.js","_components/Property.js","_components/PropertyBlock.js","_components/Features.js","_components/index.js","_components/Input.js","_components/Textarea.js","globals.js","App.js","index.js","_components/Accordian.js","_components/StatBlockForm.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Column","props","stackSize","a","createElement","className","concat","children","Actions","_this","Object","_Users_josephziemba_Projects_dnd_stat_block_creator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_josephziemba_Projects_dnd_stat_block_creator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_josephziemba_Projects_dnd_stat_block_creator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","title","content","_this2","actions","map","action","i","attack","react__WEBPACK_IMPORTED_MODULE_5___default","_AttackForm__WEBPACK_IMPORTED_MODULE_11__","key","updateAction","_Row__WEBPACK_IMPORTED_MODULE_6__","_Column__WEBPACK_IMPORTED_MODULE_8__","_Input__WEBPACK_IMPORTED_MODULE_7__","type","label","placeholder","value","fieldName","onChange","e","id","_Textarea__WEBPACK_IMPORTED_MODULE_9__","rows","_this3","Fragment","renderActions","onClick","addAction","React","Component","global","_Row__WEBPACK_IMPORTED_MODULE_1__","_Column__WEBPACK_IMPORTED_MODULE_2__","___WEBPACK_IMPORTED_MODULE_3__","_SelectField__WEBPACK_IMPORTED_MODULE_4__","AttackForm","options","targets","reach","dieNum","dmgDie","damageTypes","dmgType","htmlFor","dex","name","target","Row","SelectField","opt","flat","center","StatBlockDisplay","abilities","stats","keys","ability","score","mod","getAbilityMod","react_default","features","feature","_components_PropertyBlock","Math","floor","toHit","_action$attack","prof","str","damage","parseInt","proficiency","_stats$hp","hp","hitDie","manualHp","conMod","con","hitPoints","size","creatureType","ac","support","speed","flySpeed","swimSpeed","renderAbilities","conditionImmune","length","_components_Property","join","immune","resists","vulnerable","skills","senses","langs","renderFeatures","Property","PropertyBlock","Features","classCallCheck","possibleConstructorReturn","getPrototypeOf","Input","updateFeature","Textarea","addFeature","d","__webpack_exports__","_components_StatBlockDisplay","StatBlockForm","_components_Features","hideLabel","aria-describedby","supportText","creatureTypes","array120","languages","conditions","testState","int","wis","cha","challenge","xp","App","objectSpread","updateState","bind","assertThisInitialized","updateAbility","updateAC","updateHP","updatePropertyList","_e$target","setState","defineProperty","newAbilities","assign","newAC","newHP","selected","arrayToUpdate","sorted","sort","newFeatures","push","featureId","_e$target2","feat","actionType","newAction","newActions","actionId","_e$target3","_components","ReactDOM","render","src_App_0","document","getElementById","Accordian","open","toggleAccordian","_Users_josephziemba_Projects_dnd_stat_block_creator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_6___default","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","_SelectField__WEBPACK_IMPORTED_MODULE_7__","toUpperCase","_Accordian__WEBPACK_IMPORTED_MODULE_11__","_index__WEBPACK_IMPORTED_MODULE_6__","renderAbilityFields","react_bootstrap_typeahead__WEBPACK_IMPORTED_MODULE_10__","multiple","skill","_Actions__WEBPACK_IMPORTED_MODULE_12__"],"mappings":"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","file":"static/js/main.a174521a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Column = (props) => {\n  let sizeClass;\n  switch (props.stackSize) {\n    case 'small':\n      sizeClass = 'col-sm';\n      break;\n    case 'med':\n      sizeClass = 'col-md';\n      break;\n    default:\n      sizeClass = 'col-sm';\n      break;\n  }\n\n  return (\n    <div className={`col ${props.className}`}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Column;","import React from 'react';\nimport Row from './Row';\nimport Input from './Input';\nimport Column from './Column';\nimport Textarea from './Textarea';\nimport SelectField from './SelectField';\nimport AttackForm from './AttackForm';\n\nclass Actions extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      title: 'Title',\n      content: 'Content'\n    }\n  }\n\n  renderActions() {\n    return this.props.actions.map((action, i) => {\n      if (!action.attack) {\n        return (\n          <div className='feature-block' key={i} >\n\n            <Row >\n              <Column className='col-4'>\n                <Input\n                  type='text'\n                  label={'Title'}\n                  placeholder={''}\n                  value={action.title}\n                  fieldName='title'\n                  onChange={(e) => this.props.updateAction(e, action.id)}\n                />\n              </Column>\n              <Column className='col-8'>\n                <Textarea\n                  type='text'\n                  label={'Content'}\n                  placeholder={''}\n                  value={action.content}\n                  fieldName='content'\n                  rows={3}\n                  onChange={(e) => this.props.updateAction(e, action.id)}\n                />\n              </Column>\n            </Row>\n          </div>\n\n        )\n\n      }\n\n      if (action.attack) {\n        return (\n          <AttackForm action={action} key={i} updateAction={this.props.updateAction} />\n        )\n      }\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderActions()}\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.props.addAction('General')}>Add Action</button>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary ml-2\"\n          onClick={() => this.props.addAction('Melee')}\n        >\n          Add Melee Attack\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary ml-2\"\n          onClick={() => this.props.addAction('Ranged')}\n        >\n          Add Ranged Attack\n        </button>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Actions;","import React from 'react';\nimport Row from './Row';\nimport Column from './Column';\nimport { Input } from '.';\nimport SelectField from './SelectField';\n\nconst AttackForm = (props) => {\n  return (\n    <div className=\"feature-block\">\n      <Row>\n        <Column className='col-4-md col-12-sm'>\n          <Input\n            type='text'\n            label={'Title'}\n            placeholder={''}\n            value={props.action.title}\n            fieldName='title'\n            onChange={(e) => props.updateAction(e, props.action.id)}\n          />\n        </Column>\n        <Column className='col-md-4 col-sm-12'>\n          <SelectField\n            label={'Attack'}\n            fieldName={'type'}\n            options={['Melee', 'Ranged']}\n            value={props.action.attack.type}\n            onChange={(e) => props.updateAction(e, props.action.id)}\n          />\n        </Column>\n        <Column className='col-md-2 col-sm-12'>\n          <Input\n            label={'Targets'}\n            fieldName={'targets'}\n            type='number'\n            value={props.action.attack.targets}\n            onChange={(e) => props.updateAction(e, props.action.id)}\n          />\n        </Column>\n        <Column className='col-md-2 col-sm-12'>\n          <Input\n            label={props.action.attack.type === 'Ranged' ? 'Range' : 'Reach'}\n            fieldName={'reach'}\n            type='number'\n            value={props.action.attack.reach}\n            onChange={(e) => props.updateAction(e, props.action.id)}\n          />\n        </Column>\n      </Row>\n      <Row>\n        <Column className='col-md-3 col-sm-12'>\n          <Input\n            label={'#'}\n            type='number'\n            fieldName={'dieNum'}\n            value={props.action.attack.dieNum}\n            onChange={(e) => props.updateAction(e, props.action.id)}\n          />\n        </Column>\n        <Column className='col-md-3 col-sm-12'>\n          <SelectField\n            label={'Dmg Die'}\n            fieldName={'dmgDie'}\n            options={[4, 6, 8, 10, 12]}\n            value={props.action.attack.dmgDie}\n            onChange={(e) => props.updateAction(e, props.action.id)}\n          />\n        </Column>\n        <Column className='col-md-4 col-sm-12'>\n          <SelectField\n            label={'Dmg Type'}\n            fieldName={'dmgType'}\n            options={global.damageTypes}\n            value={props.action.attack.dmgType}\n            onChange={(e) => props.updateAction(e, props.action.id)}\n          />\n        </Column>\n        <Column className='col-2 col-12-sm'>\n          <div className=\"form-group text-center\">\n            <label className='' htmlFor=\"dex\">Dex?</label>\n            <div\n              className={`dex-check ${props.action.attack.dex ? 'checked' : ''}`}\n              name='dex'\n              value={!props.action.attack.dex}\n              onClick={(e) => props.updateAction({ target: { name: 'dex', value: !props.action.attack.dex } }, props.action.id)} ></div>\n          </div>\n        </Column>\n      </Row>\n    </div>\n  )\n}\n\nexport default AttackForm;","import React from 'react';\n\nconst Row = (props) => {\n  return (\n    <div className={`row ${props.className}`}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Row;","import React from 'react';\n\nconst SelectField = (props) => {\n  let options = props.options.map(opt => {\n    return (<option key={opt} >{opt}</option>)\n  })\n\n  if(props.flat) {\n    return (\n      <div className={`form-group ${props.center ? 'text-center' : ''}`}>\n        <label htmlFor=\"exampleFormControlSelect1\">{props.label}</label>\n        <select className={`form-control form-control-sm ${props.center ? 'text-center' : ''}`} id=\"exampleFormControlSelect1\" value={props.value} onChange={props.onChange} name={props.fieldName}>\n          {options}\n        </select>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`form-group ${props.center ? 'text-center' : ''}`}>\n      <label htmlFor=\"exampleFormControlSelect1\">{props.label}</label>\n      <select className={`form-control form-control-sm ${props.center ? 'text-center' : ''}`} id=\"exampleFormControlSelect1\" value={props.value} onChange={props.onChange} name={props.fieldName}>\n        {options}\n      </select>\n    </div>\n  );\n}\n\nexport default SelectField;","import React from 'react';\n\nimport { Property, PropertyBlock } from './index';\n\nclass StatBlockDisplay extends React.Component {\n  renderAbilities() {\n    let { abilities } = this.props.stats;\n    return Object.keys(abilities).map(ability => {\n      let score = abilities[ability];\n      let mod = this.getAbilityMod(score);\n\n      return (\n        <div className='ability' key={ability}>\n          <h4>{ability}</h4>\n          <span>{score} ({mod < 0 ? '-' : '+'}{mod})</span>\n        </div>\n      );\n    });\n  }\n\n  renderFeatures() {\n    let { features } = this.props.stats;\n\n    return features.map(feature => {\n      return (\n        <PropertyBlock\n          key={feature.title}\n          title={feature.title}\n          content={feature.content}\n        />\n      )\n    });\n  }\n\n  getAbilityMod(score) {\n    return Math.floor((score - 10) / 2);\n  }\n\n  renderActions() {\n    let { actions } = this.props.stats;\n\n    return actions.map((action, i) => {\n      if (action.attack) {\n        let { dieNum, dmgDie, prof, dex, reach, targets, dmgType } = action.attack;\n        // Get hit mod\n        let toHit;\n        if (dex) {\n          toHit = this.getAbilityMod(this.props.stats.abilities.dex);\n        } else {\n          toHit = this.getAbilityMod(this.props.stats.abilities.str);\n        }\n\n        // Get Damage Mod\n\n        let avg = ((dieNum * dmgDie) / 2) + toHit;\n        let damage = `${avg} (${dieNum}d${dmgDie} + ${toHit}) ${dmgType} damage.`\n\n        if (prof) toHit += parseInt(this.props.stats.proficiency);\n\n        return (\n          <div className='property property--block' key={i}>\n            <span className=\"property-name italic\">{action.title}. </span>\n            <span className='italic'>{action.attack.type} Weapon Attack.  </span>\n            {`${toHit >= 0 ? '+' : ''}${toHit}`} to Hit&nbsp;&nbsp;|&nbsp;&nbsp;\n            {action.attack.type === 'Ranged' ? 'Range' : 'Reach'} {reach}ft&nbsp;&nbsp;|&nbsp;&nbsp;\n            {targets} target{targets > 1 ? 's' : ''}&nbsp;&nbsp;|&nbsp;&nbsp;\n            {damage}\n          </div>\n        )\n      }\n\n      if (!action.attack) {\n        return (\n          <PropertyBlock\n            key={i}\n            title={action.title}\n            content={action.content}\n          />\n        )\n      }\n      return\n    });\n  }\n\n  render() {\n    let { stats } = this.props;\n    let { abilities } = stats;\n    let { hitDie, dieNum, manualHp } = stats.hp;\n\n    let conMod = Math.floor((abilities.con - 10) / 2);\n\n    let totalHp = ((hitDie * dieNum) / 2) + conMod;\n\n    let hitPoints = `${totalHp} (${dieNum}d${hitDie} + ${conMod})`;\n\n    return (\n      <div id=\"StatBlockDisplay\" className=\"statBlock\">\n        <div id=\"creatureHeading\" className=\"creature-heading\">\n          <h1 id=\"monsterName\">{this.props.stats.name}</h1>\n          <h2 id=\"monsterDetails\">{this.props.stats.size} {this.props.stats.creatureType}</h2>\n        </div>\n\n        <div className='section red'>\n          <div className='property'>\n            <span className=\"property-name\">Armor Class</span>\n            {stats.ac.score}\n            {stats.ac.support &&\n              ` (${stats.ac.support})`\n            }\n          </div>\n          <div className='property'>\n            <span className=\"property-name\">Hit Points</span> {manualHp ? manualHp : hitPoints}\n          </div>\n          <div className='property'>\n            <span className=\"property-name\">Speed</span>\n            {stats.speed}ft\n            {stats.flySpeed > 0 ? `, ${stats.flySpeed}ft (Fly)` : ''}\n            {stats.swimSpeed > 0 ? `, ${stats.swimSpeed}ft (Swim)` : ''}\n          </div>\n        </div>\n\n        <div className='section red'>\n          {this.renderAbilities()}\n        </div>\n\n        <div className='section red'>\n          {stats.conditionImmune.length > 0 &&\n            <Property\n              title='Condition Immunities'\n              content={stats.conditionImmune.join(', ')}\n            />\n          }\n          {stats.immune.length > 0 &&\n            <Property\n              title='Damage Immunities'\n              content={stats.immune.join(', ')}\n            />\n          }\n          {stats.resists.length > 0 &&\n            <Property\n              title='Damage Resistances'\n              content={stats.resists.join(', ')}\n            />\n          }\n          {stats.vulnerable.length > 0 &&\n            <Property\n              title='Damage Vulnerabilities'\n              content={stats.vulnerable.join(', ')}\n            />\n          }\n          {stats.skills.length > 0 &&\n            <Property\n              title='Skills'\n              content={stats.skills.join(', ')}\n            />\n          }\n          {stats.senses.length > 0 &&\n            <Property\n              title='Senses'\n              content={stats.senses.join(', ')}\n            />\n          }\n          {stats.langs.length > 0 &&\n            <Property\n              title='Languages'\n              content={stats.langs.join(', ')}\n            />\n          }\n        </div>\n\n        <div className='section'>\n          {this.renderFeatures()}\n        </div>\n\n        <div className='section section--with-heading'>\n          <h3>Actions</h3>\n          {this.renderActions()}\n        </div>\n\n\n      </div >\n    )\n  }\n}\n\nexport default StatBlockDisplay;","import React from 'react';\n\nconst Property = (props) => {\n  return(\n    <div className='property'>\n      <span className=\"property-name\">{props.title}</span> {props.content}\n    </div>\n  )\n}\n\nexport default Property;","import React from 'react';\n\nconst PropertyBlock = (props) => {\n  return (\n    <div className='property property--block'>\n      <span className=\"property-name italic\">{props.title}.</span> {props.content}\n    </div>\n  )\n}\n\nexport default PropertyBlock;","import React from 'react';\nimport Row from './Row';\nimport Input from './Input';\nimport Column from './Column';\nimport Textarea from './Textarea';\n\nclass Features extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      title: 'Title',\n      content: 'Content'\n    }\n  }\n\n  renderFeatures() {\n    return this.props.features.map((feature, i) => {\n      return (\n        <div className='feature-block' key={i}>\n          <Row >\n            <Column className='col-4'>\n              <Input\n                type='text'\n                label={'Title'}\n                placeholder={''}\n                value={feature.title}\n                fieldName='title'\n                onChange={(e) => this.props.updateFeature(e, feature.id)}\n              />\n            </Column>\n            <Column className='col-8'>\n              <Textarea\n                type='text'\n                label={'Content'}\n                placeholder={''}\n                value={feature.content}\n                fieldName='content'\n                rows={5}\n                onChange={(e) => this.props.updateFeature(e, feature.id)}\n              />\n            </Column>\n          </Row>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderFeatures()}\n        <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.addFeature}>Add Feature</button>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Features;","import Row from './Row';\nimport Column from './Column';\nimport StatBlockDisplay from './StatBlockDisplay';\nimport Property from './Property';\nimport PropertyBlock from './PropertyBlock';\nimport StatBlockForm from './StatBlockForm';\nimport Input from './Input';\nimport InputFlat from './InputFlat';\nimport Features from './Features'\nimport Textarea from './Textarea'\n\nexport {\n  Column,\n  Row,\n  StatBlockDisplay,\n  Property,\n  PropertyBlock,\n  StatBlockForm,\n  Input,\n  InputFlat,\n  Features,\n  Textarea\n};\n\n","import React from 'react';\n\nconst Input = (props) => {\n  return (\n    <div className=\"form-group\">\n      {!props.hideLabel &&\n        <label htmlFor={props.id}>{props.label}</label>\n      }\n      <input\n        type={props.type}\n        className=\"form-control form-control-sm\"\n        id={props.id}\n        aria-describedby={`${props.id}Help`}\n        placeholder={props.placeholder}\n        onChange={props.onChange}\n        value={props.value}\n        name={props.fieldName}\n      />\n      <small id={`${props.id}Help`} className=\"form-text text-muted\">{props.supportText}</small>\n    </div>\n  )\n}\n\nexport default Input;","import React from 'react';\n\nconst Textarea = (props) => {\n  return (\n    <div className=\"form-group\">\n      {!props.hideLabel &&\n        <label htmlFor={props.id}>{props.label}</label>\n      }\n      <textarea\n        type={props.type}\n        className=\"form-control form-control-sm\"\n        id={props.id}\n        aria-describedby={`${props.id}Help`}\n        placeholder={props.placeholder}\n        onChange={props.onChange}\n        value={props.value}\n        name={props.fieldName}\n        rows={props.rows}\n      />\n      <small id={`${props.id}Help`} className=\"form-text text-muted\">{props.supportText}</small>\n    </div>\n  )\n}\n\nexport default Textarea;","global.creatureTypes = [\n  \"Aberration\",\n  \"Beast\",\n  \"Celestial\",\n  \"Construct\",\n  \"Dragon\",\n  \"Elemental\",\n  \"Fey\",\n  \"Fiend\",\n  \"Giant\",\n  \"Humanoid\",\n  \"Monstrosity\",\n  \"Ooze\",\n  \"Plant\",\n  \"Undead\",\n];\n\nglobal.array120 = [\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20\n]\n\nglobal.damageTypes = [\n  'Acid',\n  'Bludgeoning',\n  'Cold',\n  'Fire',\n  'Force',\n  'Lightning',\n  'Necrotic',\n  'Piercing',\n  'Poison',\n  'Psychic',\n  'Radiant',\n  'Slashing',\n  'Thunder'\n]\n\nglobal.skills = [\n  {\n    name: 'Athletics',\n    ability: 'str'\n  },\n  {\n    name: 'Acrobatics',\n    ability: 'dex'\n  },\n  {\n    name: 'Sleight of Hand',\n    ability: 'dex'\n  },\n  {\n    name: 'Stealth',\n    ability: 'dex'\n  },\n  {\n    name: 'Arcana',\n    ability: 'int'\n  },\n  {\n    name: 'History',\n    ability: 'int'\n  },\n  {\n    name: 'Investigation',\n    ability: 'int'\n  },\n  {\n    name: 'Nature',\n    ability: 'int'\n  },\n  {\n    name: 'Religion',\n    ability: 'int'\n  },\n  {\n    name: 'Animal Handling',\n    ability: 'wis'\n  },\n  {\n    name: 'Insight',\n    ability: 'wis'\n  },\n  {\n    name: 'Medicine',\n    ability: 'wis'\n  },\n  {\n    name: 'Perception',\n    ability: 'wis'\n  },\n  {\n    name: 'Survival',\n    ability: 'wis'\n  },\n  {\n    name: 'Deception',\n    ability: 'cha'\n  },\n  {\n    name: 'Intimidation',\n    ability: 'cha'\n  },\n  {\n    name: 'Perfoemance',\n    ability: 'cha'\n  },\n  {\n    name: 'Persuasion',\n    ability: 'cha'\n  },\n]\n\nglobal.languages = [\n  'Common',\n  'Dwarvish',\n  'Elvish',\n  'Giant',\n  'Gnomish',\n  'Goblin',\n  'Halfling',\n  'Orc',\n  'Abyssal',\n  'Celestial',\n  'Draconic',\n  'Deep Speech',\n  'Infernal',\n  'Aquan (Primordial)',\n  'Auran (Primordial)',\n  'Ignan (Primordial)',\n  'Terran (Primordial)',\n  'Sylvan',\n  'Undercommon'\n]\n\nglobal.conditions = [\n  'Blinded',\n  'Charmed',\n  'Deafened',\n  'Exhaustion',\n  'Fatigued',\n  'Frightened',\n  'Grappled',\n  'Incapacitated',\n  'Paralyzed',\n  'Petrified',\n  'Poisoned',\n  'Prone',\n  'Restrained',\n  'Stunned',\n  'Unconscious'\n]","import React, { Component } from \"react\";\nimport './App.css';\n\nimport { Row, Column, StatBlockDisplay, StatBlockForm } from './_components/';\n\nconst testState = {\n  name: 'Monster Name',\n  size: 'Medium',\n  creatureType: 'Humanoid',\n  abilities: {\n    str: 10,\n    dex: 10,\n    con: 10,\n    int: 10,\n    wis: 10,\n    cha: 10\n  },\n  ac: {\n    score: 10,\n    support: ''\n  },\n  hp: {\n    hitDie: 4,\n    dieNum: 1,\n    manualHp: ''\n  },\n  proficiency: 1,\n  speed: 30,\n  flySpeed: 0,\n  swimSpeed: 0,\n  skills: [],\n  conditionImmune: [],\n  immune: [],\n  resists: [],\n  vulnerable: [],\n  senses: [],\n  langs: ['Common'],\n  challenge: '',\n  xp: '',\n  features: [\n    {\n      id: '1',\n      title: 'Sample',\n      content: 'This is a sample feature, change my content!'\n    }\n  ],\n  actions: [\n    {\n      id: 1,\n      title: 'Longsword',\n      attack: {\n        type: 'Melee',\n        prof: true,\n        reach: 5,\n        targets: 1,\n        dmgDie: 8,\n        dieNum: 1,\n        dmgType: 'Slashing',\n        dex: false\n      }\n    },\n    {\n      id: 2,\n      title: 'Longbow',\n      attack: {\n        type: 'Ranged',\n        prof: true,\n        reach: 120,\n        targets: 1,\n        dmgDie: 8,\n        dieNum: 1,\n        dmgType: 'Piercing',\n        dex: true\n      }\n    },\n    // {\n    //   id: 3,\n    //   title: 'Fey Charm',\n    //   content: \"The dryad targets one humanoid or beast that she can see within 30 feet of her. If the target can see the dryad, it must succeed on a DC 14 Wisdom saving throw or be magically charmed. The charmed creature regards the dryad as a trusted friend to be heeded and protected. Although the target isn't under the dryad's control, it takes the dryad's requests or actions in the most favorable way it can.\"\n    // }\n  ]\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...testState\n    }\n\n    this.updateState = this.updateState.bind(this);\n    this.updateAbility = this.updateAbility.bind(this);\n    this.updateAC = this.updateAC.bind(this);\n    this.updateHP = this.updateHP.bind(this);\n    this.updatePropertyList = this.updatePropertyList.bind(this);\n    this.addFeature = this.addFeature.bind(this);\n    this.updateFeature = this.updateFeature.bind(this);\n    this.addAction = this.addAction.bind(this);\n    this.updateAction = this.updateAction.bind(this);\n  }\n\n  updateState(e) {\n    let { name, value } = e.target;\n    debugger;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  updateAbility(ability, value) {\n    let newAbilities = Object.assign({}, this.state.abilities);\n\n    newAbilities[ability] = value;\n\n    this.setState({\n      abilities: newAbilities\n    });\n  }\n\n  updateAC(e) {\n    let fieldName = e.target.name;\n    let newAC = {\n      ...this.state.ac,\n      [fieldName]: e.target.value\n    }\n    this.setState({\n      ac: newAC\n    });\n  }\n\n  updateHP(e) {\n    let fieldName = e.target.name;\n    let newHP = {\n      ...this.state.hp,\n      [fieldName]: e.target.value\n    }\n    this.setState({\n      hp: newHP\n    });\n  }\n\n  updatePropertyList(selected, arrayToUpdate) {\n    let sorted = selected.sort();\n    debugger;\n    this.setState({\n      [arrayToUpdate]: sorted\n    });\n  }\n\n  addFeature() {\n    let newFeatures = [].concat(this.state.features);\n\n    newFeatures.push({\n      id: newFeatures.length + 1,\n      title: '',\n      content: ''\n    });\n\n    this.setState({\n      features: newFeatures\n    });\n  }\n\n  updateFeature(e, featureId) {\n    let { name, value } = e.target;\n    let newFeatures = this.state.features.map(feat => {\n      if (feat.id === featureId) {\n        feat[name] = value;\n      }\n      return feat;\n    });\n\n    this.setState({\n      features: newFeatures\n    })\n\n  }\n\n  addAction(actionType) {\n    debugger;\n    let newActions = [].concat(this.state.actions);\n\n    let newAction;\n\n    switch (actionType) {\n      case ('General'):\n        newAction = {\n          id: newActions.length + 1,\n          title: '',\n          content: ''\n        }\n        break;\n      case ('Melee'):\n        newAction = {\n          id: newActions.length + 1,\n          title: '',\n          attack: {\n            type: 'Melee',\n            prof: true,\n            reach: 0,\n            targets: 0,\n            dmgDie: 4,\n            dieNum: 0,\n            dmgType: '',\n            dex: false\n          }\n        }\n        break;\n      default:\n        break;\n    }\n\n    newActions.push(newAction);\n\n    this.setState({\n      actions: newActions\n    });\n  }\n\n  updateAction(e, actionId) {\n    let { name, value } = e.target;\n    debugger;\n\n    let newActions = this.state.actions.map((action, i) => {\n      if (action.id === actionId) {\n        if (name === 'content') {\n          action[name] = value;\n        } else if (name === 'title') {\n          action[name] = value;\n        } else {\n          action.attack[name] = value;\n        }\n      }\n      return action;\n    });\n\n    this.setState({\n      actions: newActions\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"flex-container App\">\n        <Row>\n          <Column stackSize='med' className=\"\">\n            <StatBlockForm\n              stats={this.state}\n              updateState={this.updateState}\n              updateAbility={this.updateAbility}\n              updateAC={this.updateAC}\n              updateHP={this.updateHP}\n              updatePropertyList={this.updatePropertyList}\n              addFeature={this.addFeature}\n              updateFeature={this.updateFeature}\n              addAction={this.addAction}\n              updateAction={this.updateAction}\n            />\n          </Column>\n          <Column stackSize='med' className=\"\">\n            <StatBlockDisplay\n              stats={this.state}\n            />\n          </Column>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport './globals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n","import React from 'react';\n\nclass Accordian extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    }\n\n    this.toggleAccordian = this.toggleAccordian.bind(this);\n  }\n\n  toggleAccordian() {\n    this.setState({\n      open: !this.state.open\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"accordion\" id=\"accordionExample\">\n        <h3 onClick={this.toggleAccordian} className=\"form-header\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n          {this.props.title}\n        </h3>\n\n        <div id=\"collapseOne\" className={`accordionInner collapse ${this.state.open ? 'show' : ''}`} aria-labelledby=\"headingOne\" data-parent=\"#accordionExample\">\n          {this.props.children}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Accordian;","import React from 'react';\nimport { Input, Row, InputFlat, Features } from './index'\nimport SelectField from './SelectField';\nimport Column from './Column';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport Accordian from './Accordian';\nimport Actions from './Actions';\n\nclass StatBlockForm extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderAbilityFields() {\n    return Object.keys(this.props.stats.abilities).map(ability => {\n      return (\n        <Column stackSize='small' key={ability}>\n          <SelectField\n            label={ability.toUpperCase()}\n            options={global.array120}\n            value={this.props.stats.abilities[ability]}\n            fieldName={ability}\n            onChange={(e) => this.props.updateAbility(ability, e.target.value)}\n            center\n          />\n        </Column>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"StatBlockForm\">\n        <Accordian title=\"Basic Details\">\n          <Input\n            type='text'\n            label={'Name'}\n            placeholder={'Creature Name'}\n            value={this.props.stats.name}\n            fieldName='name'\n            onChange={this.props.updateState}\n          />\n\n          <Row>\n            <Column stackSize='small'>\n              <SelectField\n                label={'Size'}\n                options={['Small', 'Medium', 'Large', 'Huge', 'Giant']}\n                value={this.props.stats.size}\n                fieldName='size'\n                onChange={this.props.updateState}\n              />\n            </Column>\n            <Column stackSize='small'>\n              <SelectField\n                label={'Creature Type'}\n                options={global.creatureTypes}\n                value={this.props.stats.creatureType}\n                onChange={this.props.updateState}\n                fieldName='creatureType'\n              />\n            </Column>\n            <Column stackSize='small'>\n              <Input\n                type='number'\n                label={'Proficiency Bonus'}\n                placeholder={''}\n                value={this.props.stats.proficiency}\n                fieldName='proficiency'\n                onChange={this.props.updateState}\n              />\n            </Column>\n          </Row>\n\n          <Row>\n            <Column>\n              <h4 className='form-header'>Armor Class</h4>\n              <Row>\n                <Column stackSize='small'>\n                  <Input\n                    label={'Score'}\n                    placeholder={''}\n                    value={this.props.stats.ac.score}\n                    fieldName='score'\n                    onChange={this.props.updateAC}\n                    type='number'\n                  />\n                  <Input\n                    type='text'\n                    label={'Support'}\n                    placeholder={''}\n                    value={this.props.stats.ac.support}\n                    fieldName='support'\n                    onChange={this.props.updateAC}\n                  />\n                </Column>\n              </Row>\n            </Column>\n            <Column>\n              <h4 className='form-header'>Hit Points</h4>\n              <Row>\n                <Column stackSize='small'>\n                  <SelectField\n                    label={'Hit Die'}\n                    options={[4, 6, 8, 10, 12]}\n                    value={this.props.stats.hp.hitDie}\n                    fieldName='hitDie'\n                    onChange={this.props.updateHP}\n                  />\n                  <Input\n                    type='number'\n                    label={'Number of Dice'}\n                    placeholder={''}\n                    value={this.props.stats.hp.dieNum}\n                    fieldName='dieNum'\n                    onChange={this.props.updateHP}\n                  />\n                </Column>\n              </Row>\n            </Column>\n            <Column>\n              <h4 className='form-header'>Speed</h4>\n              <Input\n                type='number'\n                label={'Base Speed'}\n                placeholder={''}\n                value={this.props.stats.speed}\n                fieldName='speed'\n                onChange={this.props.updateState}\n              />\n              <Row>\n                <Column>\n                  <Input\n                    type='number'\n                    label={'Fly'}\n                    placeholder={''}\n                    value={this.props.stats.flySpeed}\n                    fieldName='flySpeed'\n                    onChange={this.props.updateState}\n                  />\n                </Column>\n                <Column>\n                  <Input\n                    type='number'\n                    label={'Swim'}\n                    placeholder={''}\n                    value={this.props.stats.swimSpeed}\n                    fieldName='swimSpeed'\n                    onChange={this.props.updateState}\n                  />\n                </Column>\n              </Row>\n            </Column>\n          </Row>\n        </Accordian>\n        <Accordian title=\"Ability Scores\">\n          <Row>\n            {this.renderAbilityFields()}\n          </Row>\n        </Accordian>\n        <Accordian title=\"Properties\">\n          <div className=\"feature-block\">\n            <label>Condition Immunities</label>\n            <Typeahead\n              multiple\n              options={global.conditions}\n              selected={this.props.stats.conditionImmune}\n              onChange={(selected) => this.props.updatePropertyList(selected, 'conditionImmune')}\n            />\n          </div>\n          <div className=\"feature-block\">\n            <label>Damage Immunities</label>\n            <Typeahead\n              multiple\n              options={global.damageTypes}\n              selected={this.props.stats.immune}\n              onChange={(selected) => this.props.updatePropertyList(selected, 'immune')}\n            />\n          </div>\n          <div className=\"feature-block\">\n            <label>Resistences</label>\n            <Typeahead\n              multiple\n              options={global.damageTypes}\n              selected={this.props.stats.resists}\n              onChange={(selected) => this.props.updatePropertyList(selected, 'resists')}\n            />\n          </div>\n          <div className=\"feature-block\">\n            <label>Vulnerabilities</label>\n            <Typeahead\n              multiple\n              options={global.damageTypes}\n              selected={this.props.stats.vulnerable}\n              onChange={(selected) => this.props.updatePropertyList(selected, 'vulnerable')}\n            />\n          </div>\n          <div className=\"feature-block\">\n            <label>Skill Proficiencies</label>\n            <Typeahead\n              multiple\n              options={global.skills.map(skill => skill.name)}\n              selected={this.props.stats.skills}\n              onChange={(selected) => this.props.updatePropertyList(selected, 'skills')}\n            />\n          </div>\n          <div className=\"feature-block\">\n\n          <label>Languages</label>\n          <Typeahead\n            multiple\n            options={global.languages}\n            selected={this.props.stats.langs}\n            onChange={(selected) => this.props.updatePropertyList(selected, 'langs')}\n          />\n          </div>\n        </Accordian>\n\n        <Accordian title=\"Features\">\n          <Features\n            features={this.props.stats.features}\n            addFeature={this.props.addFeature}\n            updateFeature={this.props.updateFeature}\n          />\n        </Accordian>\n\n        <Accordian title=\"Actions\">\n          <Actions\n            actions={this.props.stats.actions}\n            addAction={this.props.addAction}\n            updateAction={this.props.updateAction}\n          />\n        </Accordian>\n\n      </div>\n    )\n  }\n}\n\nexport default StatBlockForm;"],"sourceRoot":""}